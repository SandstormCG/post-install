- name: Install docker & docker-compose
  include_tasks: install.yml

###########################################
## Create and link new docker volume folder
###########################################
- name: Delete default docker volumes folder
  file:
    state: absent
    path: /var/lib/docker/volumes
  become: yes

- name: Create link to docker volumes folder
  file:
    src: "{{ volumes_folder }}"
    dest: /var/lib/docker/volumes
    state: link
  become: yes

###########################################
## Generate docker-compose files
###########################################

- name: Create a list of dockers
  set_fact:
    dockers: ["jellyfin"]

- name: Create composer directory if it does not exist
  file:
    path: "~/composers/{{ item }}/"
    state: directory
    group: "{{ group }}"
    owner: "{{ user }}"
    mode: 0755
  with_items:
    - "{{ dockers }}"

- name: Generate docker-compose file
  template:
    src: "{{ item }}-compose.j2"
    dest: "~/composers/{{ item }}/docker-compose.yml"
    group: "{{ group }}"
    owner: "{{ user }}"
  with_items:
    - "{{ dockers }}"

###########################################
## Configure nginx reverse proxy
###########################################

- name: Set Leap nginx conf folder
  set_fact:
    conf_folder: /etc/nginx/vhosts.d 
  when: distro=="leap"

- name: Set Ubuntu nginx conf folder
  set_fact:
    conf_folder: /etc/nginx/sites-available
  when: distro=="ub"

- name: Generate nginx conf file
  template:
    src: "{{ item }}-site.j2"
    dest: "{{ conf_folder }}/{{ item }}.conf"
    group: root
    owner: root
    mode: 0644
  with_items:
    - "{{ dockers }}"
  become: yes 

- name: Soft link to enable site 
  file:
    src: "{{ conf_folder }}/{{ item }}"
    dest: "{{ conf_folder }}/{{ item }}"
    state: link
  with_items:
    - "{{ dockers }}"
  become: yes
  when: distro=="ub"
 
#- name: Restart nginx service 
#  systemd:
#    name: nginx
#    state: restarted
#  become: yes